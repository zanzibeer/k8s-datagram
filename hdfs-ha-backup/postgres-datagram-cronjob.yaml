apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgres-backup-datagram
  namespace: pgadmin4
  labels:
    k8slens-edit-resource-version: v1
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"batch/v1","kind":"CronJob","metadata":{"annotations":{},"name":"postgres-backup-datagram","namespace":"pgadmin4"},"spec":{"concurrencyPolicy":"Allow","failedJobsHistoryLimit":1,"jobTemplate":{"metadata":{"creationTimestamp":null},"spec":{"template":{"metadata":{"creationTimestamp":null},"spec":{"containers":[{"args":["export
      TZ=\"Europe/Moscow\"; echo \"$(date +\"%D %T\") Starting postgresql backup
      job=======================\" \u003e\u003e /postgres_backup/backup.log;
      echo \"$(date +\"%D %T\") Backup database admin-console is starting\"
      \u003e\u003e /postgres_backup/backup.log; export PGPASSWORD=postgres;
      pg_dump -h admin-console-postgresql.admin-console -U ac -d
      dg-admin-console --verbose --format=c --blobs --file
      \"/postgres_backup/admin-console/admin-console_$(date
      +\"%m.%d.%y-%H-%M\").sql\"; echo \"$(date +\"%D %T\") Dump database
      admin-console completed\" \u003e\u003e /postgres_backup/backup.log; echo
      \"$(date +\"%D %T\") Backup database datagram is starting\" \u003e\u003e
      /postgres_backup/backup.log; export PGPASSWORD=chAngE_Me; pg_dump -h
      datagram-postgresql.neoflex-datagram -U datagram -d datagram -Fp \u003e
      /postgres_backup/datagram/datagram_$(date +\"%m.%d.%y-%H-%M\").sql; echo
      \"$(date +\"%D %T\") Dump database datagram completed\" \u003e\u003e
      /postgres_backup/backup.log; echo \"$(date +\"%D %T\") Backup database
      apache-airflow is starting\" \u003e\u003e /postgres_backup/backup.log;
      export PGPASSWORD=postgres; pg_dump --host
      \"airflow-postgresql.apache-airflow\" --dbname \"postgres\" --username
      \"postgres\" --verbose --format=c --blobs --file
      \"/postgres_backup/apache-airflow/apache-airflow_$(date
      +\"%m.%d.%y-%H-%M\").sql\"; echo \"$(date +\"%D %T\") Dump database
      apache-airflow completed\" \u003e\u003e /postgres_backup/backup.log; echo
      \"$(date +\"%D %T\") Postgresql backup job successed and
      close============\" \u003e\u003e
      /postgres_backup/backup.log;"],"command":["/bin/sh","-c"],"image":"prodrigestivill/postgres-backup-local","imagePullPolicy":"IfNotPresent","name":"postgres-backup","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/postgres_backup","name":"postgres-backup-storage"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"OnFailure","schedulerName":"default-scheduler","securityContext":{},"terminationGracePeriodSeconds":30,"volumes":[{"name":"postgres-backup-storage","persistentVolumeClaim":{"claimName":"postgres-backup-pvc"}}]}}}},"schedule":"45
      15 * * *","successfulJobsHistoryLimit":3,"suspend":false}}
spec:
  schedule: 45 14 * * *
  concurrencyPolicy: Allow
  suspend: false
  jobTemplate:
    metadata:
      creationTimestamp: null
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          volumes:
            - name: postgres-backup-storage
              persistentVolumeClaim:
                claimName: postgres-backup-pvc
          containers:
            - name: postgres-backup
              image: prodrigestivill/postgres-backup-local:9.6
              command:
                - /bin/sh
                - '-c'
              args:
                - >-
                  export TZ="Europe/Moscow"; echo "$(date +"%D %T") Starting
                  postgresql backup job=======================" >>
                  /postgres_backup/backup.log; echo "$(date +"%D %T") Backup
                  database datagram is starting" >> /postgres_backup/backup.log;
                  export PGPASSWORD=chAngE_Me; pg_dump -h
                  datagram-postgresql.neoflex-datagram -U datagram -d datagram
                  -v -Fc -b -f /postgres_backup/datagram/datagram_$(date
                  +"%m.%d.%y-%H-%M").sql; echo "$(date +"%D %T") Dump database
                  datagram completed" >> /postgres_backup/backup.log; echo
                  "$(date +"%D %T") Postgresql backup job successed and
                  close============" >> /postgres_backup/backup.log;
              resources: {}
              volumeMounts:
                - name: postgres-backup-storage
                  mountPath: /postgres_backup
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              imagePullPolicy: IfNotPresent
          restartPolicy: OnFailure
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
